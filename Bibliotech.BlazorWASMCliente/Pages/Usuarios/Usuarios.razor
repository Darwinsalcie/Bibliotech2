@page "/usuarios"

@using Bibliotech.Shared.Usuarios
@using Bibliotech.BlazorWASMCliente.Services.Usuarios
@using CurrieTechnologies.Razor.SweetAlert2


@inject SweetAlertService Swal;
@inject IUsuariosService usuarioService;

<h3>Usuarios</h3>



<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>EMail</th>
            <th>Rol</th>
            <th></th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @if (listaUsuarios == null)
        {

            <tr>
                <td colspan="5" align="center">
                    <img style="width:50px" src="https://media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif" />
                </td>
            </tr>
        }
        else
        {
            @foreach (var item in listaUsuarios)
            {
                <tr>

                    <td>@item.Name</td>
                    <td>@item.EMail</td>
                    <td>@item.RoleName</td>
                    <td class="text-end">
                        <a class="btn btn-primary btn-sm" href="usuario/reserva/@item.Id">
                            <img src="/icons/books.svg" width="24" height="24" />
                        </a>
                        <a class="btn btn-primary btn-sm" href="usuario/notificaciones/@item.Id">
                            <img src="/icons/mingcute--notification-fill.svg" width="24" height="24" />
                        </a>
                        <a class="btn btn-primary btn-sm" href="usuarios/@item.Id">
                            <img src="/icons/mdi--pencil.svg" width="24" height="24" />
                        </a>
                        <button type="button" class="btn btn-danger btn-sm ms-2" @onclick="(() => Eliminar(item.Id))">
                            <img src="/icons/f7--trash.svg" width="24" height="24" />
                        </button>
                    </td>

                </tr>
            }
        }



    </tbody>
</table>

@code {
    List<UsuarioDTO>? listaUsuarios = null;


    protected override async Task OnInitializedAsync()
    {
        listaUsuarios = await usuarioService.GetUsuarios();
    }

    private async Task Eliminar(int id)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminar Usuario",
                Text = "Deseas eliminar el Usuario?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true
            });

        if (resultado.IsConfirmed)
        {
            var eliminado = await usuarioService.Eliminar(id);

            if (eliminado)
                listaUsuarios = listaUsuarios!.FindAll(e => e.Id != id);

        }



    }
}

