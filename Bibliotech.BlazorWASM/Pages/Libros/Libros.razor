@page "/libros"

@using Bibliotech.BlazorWASM.Services
@using CurrieTechnologies.Razor.SweetAlert2
@using Bibliotech.Shared.Libros;
@using Bibliotech.BlazorWASM.Services.Libros;
@using Bibliotech.Shared.Libros;

@inject SweetAlertService Swal;
@inject ILibrosService libroService;

<h3>Libros</h3>

<a class="btn btn-success btn-sm mb-3" href="libros/nuevo">Nuevo Libro</a>

<table class="table">
    <thead>
        <tr>
            <th>Portada</th>
            <th>Titulo</th>
            <th>Autor</th>
            <th>Genero</th>
            <th>Estatus</th>
            <th>ISBN</th>
            <th>Fecha de Publicación</th>
            <th>Fecha de Expiración</th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @if (listaLibros == null)
        {

                <tr>
                    <td colspan="5" align="center">
                        <img style="width:50px" src="https://media.tenor.com/On7kvXhzml4AAAAj/loading-gif.gif" />
                    </td>
                </tr>
        }
        else
        {
            @foreach (var item in listaLibros)
            {
                    <tr>
                    <td>
                        <img src=@item.PictureLink />

                    </td>
                        <td>@item.Tittle</td>


                        <td>@item.Autor</td>
                        <td>@item.Genero</td>
                        <td>@item.Status</td>
                        <td>@item.Isbn</td>
                        <td>@item.PublicationDate?.ToString("dd/MM/yyyy")</td>
                        <td>
                            <a class="btn btn-primary btn-sm" href="libros/@item.Id">
                                <img src="/icons/mdi--pencil.svg" width="24" height="24" />
                            </a>
                            <button type="button" class="btn btn-danger btn-sm ms-2" @onclick="(() => Eliminar(item.Id))">
                                <img src="/icons/f7--trash.svg" width="24" height="24" />
                            </button>
                        </td>
                    </tr>
            }

        }

    </tbody>
</table>




@code {

    List<LibroDTO>? listaLibros = null;


    protected override async Task OnInitializedAsync()
    {
        listaLibros = await libroService.GetLibros();

    }


    private async Task Eliminar(int id)
    {
        var resultado = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "Eliminar Libro",
                Text = "Deseas eliminar el libro?",
                Icon = SweetAlertIcon.Question,
                ShowCancelButton = true
            });

        if (resultado.IsConfirmed)
        {
            var eliminado = await libroService.Eliminar(id);

            if (eliminado)
                listaLibros = listaLibros!.FindAll(e => e.Id != id);

        }


    }

}
